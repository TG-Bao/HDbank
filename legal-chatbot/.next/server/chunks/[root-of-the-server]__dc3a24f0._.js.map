{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/tb/Downloads/HDbank/legal-chatbot/src/app/api/chat/sessions-public/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { createClient } from '@supabase/supabase-js'\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Sử dụng service role key để bypass RLS\n    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.SUPABASE_SERVICE_ROLE_KEY!\n    )\n\n    // Lấy userId từ query params\n    const { searchParams } = new URL(request.url)\n    const userId = searchParams.get('userId')\n\n    // Lấy sessions (có thể filter theo userId nếu có)\n    let query = supabase\n      .from('chat_sessions')\n      .select(`\n        id,\n        title,\n        created_at,\n        updated_at,\n        chat_messages (\n          id,\n          role,\n          content,\n          sources,\n          created_at\n        )\n      `)\n      .order('created_at', { ascending: false })\n      .limit(50)\n\n    // Nếu có userId, chỉ lấy sessions của user đó\n    if (userId) {\n      query = query.eq('user_id', userId)\n    }\n\n    const { data: sessions, error: sessionsError } = await query\n\n    if (sessionsError) {\n      console.error('Error fetching sessions:', sessionsError)\n      return NextResponse.json({ \n        success: false, \n        error: 'Database error',\n        details: sessionsError.message\n      })\n    }\n\n    return NextResponse.json({\n      success: true,\n      sessions: sessions || []\n    })\n  } catch (error) {\n    console.error('Sessions public API error:', error)\n    return NextResponse.json({ \n      success: false, \n      error: (error as Error).message || 'Internal server error'\n    })\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,yCAAyC;QACzC,MAAM,WAAW,IAAA,6NAAY,gFAE3B,QAAQ,GAAG,CAAC,yBAAyB;QAGvC,6BAA6B;QAC7B,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,kDAAkD;QAClD,IAAI,QAAQ,SACT,IAAI,CAAC,iBACL,MAAM,CAAC,CAAC;;;;;;;;;;;;MAYT,CAAC,EACA,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM,GACvC,KAAK,CAAC;QAET,8CAA8C;QAC9C,IAAI,QAAQ;YACV,QAAQ,MAAM,EAAE,CAAC,WAAW;QAC9B;QAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM;QAEvD,IAAI,eAAe;YACjB,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO,oKAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;gBACP,SAAS,cAAc,OAAO;YAChC;QACF;QAEA,OAAO,oKAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,UAAU,YAAY,EAAE;QAC1B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,oKAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO,IAAI;QACrC;IACF;AACF","debugId":null}}]
}